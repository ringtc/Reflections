How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was hard to see it manually.  Also, finding it in a large file takes too long.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	  You could see what changed to cause a given bug.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

     Pros: Versions are saved at logic points, regardless of the amount of time
           it took to create them.
     Cons: Versions are saved at non-logical points and most likely will not be
           in a good state to be used.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

      Git is aimed at programing while Google Docs is aimed at document writters.
      Documents are more likely to be independant, but it's probably just because
      it would be much harded to handle multiple files in Goggle Docs.xs

How can you use the commands git log and git diff to view the history of files?

    Use git log to see the history of commits. Then us git diff to see exactly 
    what changed from the previous version.

How might using version control make you more confident to make changes that
could break something?

      You can try something the might not work and know that you can always go back.

Now that you have your workspace set up, what do you want to try using Git for?

    I don't know right now.
